name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.16.0]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Debug npm scripts
        run: |
          echo "Executing npm run create-latest-json"
          npm run create-latest-json

      - name: Install Wine
        run: sudo dpkg --add-architecture i386 && sudo apt update && sudo apt install -y wine64 wine32

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run dist

      - name: Create latest.yml
        run: npm run create-latest-yml

      - name: Create latest.json
        run: npm run create-latest-json

      - name: Generate blockmap
        run: npm run generate-blockmap

      - name: Generate checksum
        run: npm run generate-checksum

      - name: Copy LICENSE and README
        run: |
          cp LICENSE ./dist/
          cp README.md ./dist/
      
      - name: List files in dist directory
        run: ls -la ./dist

      - name: Create a new directory for release files
        run: mkdir -p ./dist/release-files

      - name: Move all required files to release directory
        run: |
          mv ./dist/your-app-*.dmg ./dist/release-files/
          mv ./dist/your-app-*.exe ./dist/release-files/
          mv ./dist/your-app-*.AppImage ./dist/release-files/
          mv ./dist/latest.yml ./dist/release-files/
          mv ./dist/latest.json ./dist/release-files/
          mv ./dist/your-app-*.blockmap ./dist/release-files/
          mv ./dist/your-app-*.sha256 ./dist/release-files/
          mv ./dist/LICENSE ./dist/release-files/
          mv ./dist/README.md ./dist/release-files/

      - name: Archivate release files
        run: zip -r release-files.zip ./dist/release-files

      - name: Upload build artifact (release-files)
        uses: actions/upload-artifact@v3
        with:
          name: release-files
          path: release-files.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download release files artifact
        uses: actions/download-artifact@v3
        with:
          name: release-files

      - name: Extract Version from Tag
        id: extract_version
        run: echo "VERSION=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release-files.zip
          asset_name: release-files.zip
          asset_content_type: application/zip